import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import useSWR, { mutate } from "swr";
import {
  Button,
  ListGroup,
  ListGroupItem,
  Navbar,
  Stack,
} from "react-bootstrap";
import React, { FormEvent, useState } from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import axios from "axios";
import { fetcher, stocksApiUrl } from "../lib/axios";
import { SymbolInfo } from "../components/symbol-info";
import { debounce } from "../lib/function";

export default function Home() {
  let { data } = useSWR(stocksApiUrl, fetcher);
  let stocks = data ?? [];
  let [sorting, setSorting] = useState<Record<string, number>>({});

  const addForm = async () => {
    const symbol = prompt("Symbol?");
    if (!symbol) {
      return;
    }
    console.log("addForm", symbol);
    stocks = [...stocks, symbol];
    const res = await axios.post(stocksApiUrl, stocks);
    await mutate(stocksApiUrl);
    console.log(res);
  };

  const setSort = (symbol: string, sort: number) => {
    setSorting({ ...sorting, [symbol]: sort });
    console.log(sorting);
  };

  const sortingOrder = [...stocks].sort((a, b) => sorting[a] - sorting[b]);
  console.log({ sorting, sortingOrder });

  let stocksSorted = sortingOrder?.map((symbol: string) => (
    <SymbolInfo key={symbol} symbol={symbol} stocks={stocks} mySort={setSort} />
  ));

  return (
    <div className={styles.container}>
      <Head>
        <title>Stocks Selector</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <SearchAndAdd stocks={stocks} />
        <Stack className="flex-row flex-wrap gap-3">{stocksSorted}</Stack>
        <div
          className="position-fixed"
          style={{ right: "20px", bottom: "20px" }}
        >
          <Button onClick={addForm} size="lg">
            +
          </Button>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

export function SearchAndAdd({ stocks }: { stocks: string[] }) {
  const [value, setValue] = useState("");
  const { data } = useSWR(
    value.length > 3
      ? `/api/autocomplete?q=${encodeURIComponent(value)}`
      : null,
    fetcher
  );
  const options = data?.quotes?.map((x: any) => ({
    symbol: x.symbol,
    name: `${x.symbol}: ${x.shortname} [${x.quoteType}]`,
  }));

  const add = (e: FormEvent) => {
    e.preventDefault();
  };

  const addSymbol = async (symbol: string) => {
    stocks = [...stocks, symbol];
    const res = await axios.post(stocksApiUrl, stocks);
    await mutate(stocksApiUrl);
    setValue("");
  };

  return (
    <Navbar>
      <form onSubmit={add}>
        <input
          className="form-control form-control-lg w-100"
          type="search"
          placeholder="stock name"
          aria-label=".form-control-lg example"
          value={value}
          list="search"
          onChange={(e) => setValue(e.target.value)}
        />
        {/*<datalist id="search">*/}
        {/*  {options &&*/}
        {/*    options?.map((x: any) => <option key={x.symbol}>{x.name}</option>)}*/}
        {/*</datalist>*/}
        <ListGroup>
          {options &&
            options?.map((x: any) => (
              <ListGroupItem key={x.symbol}>
                <div onClick={() => addSymbol(x.symbol)}>{x.name}</div>
              </ListGroupItem>
            ))}
        </ListGroup>
      </form>
    </Navbar>
  );
}
